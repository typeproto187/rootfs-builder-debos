{{- $architecture := or .architecture "arm64" -}}
{{- $variant := or .variant "lima" -}}
{{- $debug := or .debug "off" -}}

architecture: {{ $architecture }}
actions:
  - action: recipe
    description: Setup core rootfs
    recipe: mainline-rootfs-core.yaml
    variables:
      architecture: {{ $architecture }}
      debug: {{ $debug }}
      imagesuffix: "-edge-pine"

  - action: run
    chroot: true
    description: Install u-boot-tools
    label: apt
    script: scripts/apt-install.sh u-boot-tools

  - action: download
    description: Fetch latest kernel ci build
    url: https://gitlab.com/pine64-org/linux/-/jobs/artifacts/pine64-kernel-ubports/download?job=build
    name: kernel
    filename: kernel.zip
    unpack: true
    compression: zip

  - action: download
    description: Fetch u-boot build
    url: https://gitlab.com/pine64-org/u-boot/-/jobs/artifacts/master/download?job=build
    name: u-boot
    filename: build.zip
    unpack: true
    compression: zip
    
  - action: overlay
    source: pine64/overlay
    destination: /

  - action: run
    chroot: true
    description: Setting egl libs to use mesa
    script: scripts/enable-mesa.sh

{{ if eq $variant "mali" }}
  - action: recipe
    description: Setting up mali
    recipe: pine64-mali.yaml
    variables:
      architecture: {{ $architecture }}
{{end}}

  - action: overlay
    description: Copying kernel to rootfs
    origin: kernel
    source: .
    destination: /var/tmp/

{{ if eq $debug "on" }}
  - action: run
    chroot: true
    description: Installing kernel on rootfs (with debug packages)
    label: dpkg
    command: dpkg -i /var/tmp/*.deb && /bin/rm /var/tmp/* -r
{{ else }}
  - action: run
    chroot: true
    description: Installing kernel on rootfs (no debug packages)
    label: dpkg
    command: dpkg -i /var/tmp/linux-image*pine64_*.deb
{{ end }}

  - action: run
    chroot: true
    description: Installing WLAN/BT firmware on rootfs
    label: apt
    script: scripts/apt-install.sh linux-firmware-rtlwifi linux-firmware-pine64-rtl8723-bt

  - action: run
    chroot: true
    script: scripts/try-depmod-installed.sh

  - action: run
    chroot: true
    description: Install v4l-utils to control camera pipeline
    label: apt
    script: scripts/apt-install.sh v4l-utils
